// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:acroworld/environment.dart';
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = AppEnvironment.isProdBuild
      ? FirebaseOptions(
          apiKey: 'AIzaSyDjE7Ifhq54h3WZ96OowouAezoTaOhpvrU',
          appId: '1:322527689838:android:6a03192dc02d2619d8ba7f',
          messagingSenderId: '322527689838',
          projectId: 'arcoworld-1415b',
          storageBucket: 'arcoworld-1415b.appspot.com',
        )
      : FirebaseOptions(
          apiKey: 'AIzaSyD2ijvzTccfy6igvAuCLgU-LiL8vRxj0fw',
          appId: '1:1077598628073:android:7e3df14179b75b4669a878',
          messagingSenderId: '1077598628073',
          projectId: 'acro-world-development',
          storageBucket: 'acro-world-development.appspot.com',
        );

  static const FirebaseOptions ios = AppEnvironment.isProdBuild
      ? FirebaseOptions(
          apiKey: 'AIzaSyDrEgJIfdilKn8rymGbZ11xM2hb0lCi7ms',
          appId: '1:322527689838:ios:75c0547a7adc978ed8ba7f',
          messagingSenderId: '322527689838',
          projectId: 'arcoworld-1415b',
          storageBucket: 'arcoworld-1415b.appspot.com',
          iosClientId:
              '322527689838-i7bm9t1a735jvdnpdfcofdq7q83ka752.apps.googleusercontent.com',
          iosBundleId: 'com.acroworld.community.ios.app',
        )
      : FirebaseOptions(
          apiKey: 'AIzaSyADpEzjlPHeWEiftRDE3H4l4q6Xn9jACZM',
          appId: '1:1077598628073:ios:46cae47a4b98130b69a878',
          messagingSenderId: '1077598628073',
          projectId: 'acro-world-development',
          storageBucket: 'acro-world-development.appspot.com',
          iosClientId:
              '1077598628073-tpdst0qqnjfknaa0vns4lfjc2084rtc0.apps.googleusercontent.com',
          iosBundleId: 'com.acroworld.community.ios.app',
        );
}
